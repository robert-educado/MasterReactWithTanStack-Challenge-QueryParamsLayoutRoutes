/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as LocaleNewsImport } from './routes/$locale.news'
import { Route as LocaleAboutImport } from './routes/$locale.about'
import { Route as LocaleProductsSlugImport } from './routes/$locale.products.$slug'
import { Route as LocaleCategoriesSlugImport } from './routes/$locale.categories.$slug'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LocaleNewsRoute = LocaleNewsImport.update({
  id: '/$locale/news',
  path: '/$locale/news',
  getParentRoute: () => rootRoute,
} as any)

const LocaleAboutRoute = LocaleAboutImport.update({
  id: '/$locale/about',
  path: '/$locale/about',
  getParentRoute: () => rootRoute,
} as any)

const LocaleProductsSlugRoute = LocaleProductsSlugImport.update({
  id: '/$locale/products/$slug',
  path: '/$locale/products/$slug',
  getParentRoute: () => rootRoute,
} as any)

const LocaleCategoriesSlugRoute = LocaleCategoriesSlugImport.update({
  id: '/$locale/categories/$slug',
  path: '/$locale/categories/$slug',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$locale/about': {
      id: '/$locale/about'
      path: '/$locale/about'
      fullPath: '/$locale/about'
      preLoaderRoute: typeof LocaleAboutImport
      parentRoute: typeof rootRoute
    }
    '/$locale/news': {
      id: '/$locale/news'
      path: '/$locale/news'
      fullPath: '/$locale/news'
      preLoaderRoute: typeof LocaleNewsImport
      parentRoute: typeof rootRoute
    }
    '/$locale/categories/$slug': {
      id: '/$locale/categories/$slug'
      path: '/$locale/categories/$slug'
      fullPath: '/$locale/categories/$slug'
      preLoaderRoute: typeof LocaleCategoriesSlugImport
      parentRoute: typeof rootRoute
    }
    '/$locale/products/$slug': {
      id: '/$locale/products/$slug'
      path: '/$locale/products/$slug'
      fullPath: '/$locale/products/$slug'
      preLoaderRoute: typeof LocaleProductsSlugImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$locale/about': typeof LocaleAboutRoute
  '/$locale/news': typeof LocaleNewsRoute
  '/$locale/categories/$slug': typeof LocaleCategoriesSlugRoute
  '/$locale/products/$slug': typeof LocaleProductsSlugRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$locale/about': typeof LocaleAboutRoute
  '/$locale/news': typeof LocaleNewsRoute
  '/$locale/categories/$slug': typeof LocaleCategoriesSlugRoute
  '/$locale/products/$slug': typeof LocaleProductsSlugRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$locale/about': typeof LocaleAboutRoute
  '/$locale/news': typeof LocaleNewsRoute
  '/$locale/categories/$slug': typeof LocaleCategoriesSlugRoute
  '/$locale/products/$slug': typeof LocaleProductsSlugRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$locale/about'
    | '/$locale/news'
    | '/$locale/categories/$slug'
    | '/$locale/products/$slug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$locale/about'
    | '/$locale/news'
    | '/$locale/categories/$slug'
    | '/$locale/products/$slug'
  id:
    | '__root__'
    | '/'
    | '/$locale/about'
    | '/$locale/news'
    | '/$locale/categories/$slug'
    | '/$locale/products/$slug'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LocaleAboutRoute: typeof LocaleAboutRoute
  LocaleNewsRoute: typeof LocaleNewsRoute
  LocaleCategoriesSlugRoute: typeof LocaleCategoriesSlugRoute
  LocaleProductsSlugRoute: typeof LocaleProductsSlugRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LocaleAboutRoute: LocaleAboutRoute,
  LocaleNewsRoute: LocaleNewsRoute,
  LocaleCategoriesSlugRoute: LocaleCategoriesSlugRoute,
  LocaleProductsSlugRoute: LocaleProductsSlugRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$locale/about",
        "/$locale/news",
        "/$locale/categories/$slug",
        "/$locale/products/$slug"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$locale/about": {
      "filePath": "$locale.about.tsx"
    },
    "/$locale/news": {
      "filePath": "$locale.news.tsx"
    },
    "/$locale/categories/$slug": {
      "filePath": "$locale.categories.$slug.tsx"
    },
    "/$locale/products/$slug": {
      "filePath": "$locale.products.$slug.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
